#!/bin/sh
cd ${0%/*} || exit 1    # Run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# Make dummy 0 directory
mkdir 0

#Creates base mesh and decomposes it into "processor*" directories:
runApplication blockMesh
cp system/decomposeParDict.hierarchical system/decomposeParDict
runApplication decomposePar

#Runs snappyHexMesh in parallel:
cp system/decomposeParDict.ptscotch system/decomposeParDict
runParallel snappyHexMesh -overwrite

#dont know whats this shite \/
#find . -type f -iname "*level*" -exec rm {} \;


#START LOOP:

n_dir=0;

#For all wind directions:
while [ $n_dir -lt 12 ]
do

deg_dir=$(($n_dir * 30));
echo "Direction number is: "$n_dir 
echo "Direction sector is: "$deg_dir

##Read windData for n_direction;
./inputData

#Write windData to ABLConditions dictionaries;
sed -i '/Uref/c\Uref                 ${inSpeed[${n_dir}]};' bcs/"0.${deg_dir}"/include/ABLConditions

sed -i '/Zref/c\Zref                 ${inZref[${n_dir}]};' bcs/"0.${deg_dir}"/include/ABLConditions

sed -i '/z0/c\z0                   uniform ${inZ0[${n_dir}]};' bcs/"0.${deg_dir}"/include/ABLConditions

#Copies 0.orig files to each processor*/0 directories:
ls -d processor* | xargs -I {} cp -r bcs/"0.${deg_dir}" ./{}/0

#Runs simpleFoam:
runParallel `getApplication`

#Reconstructs mesh in folder "constant/polyMesh":
runApplication reconstructParMesh -constant

#Maps partitioned results into the reconstruted mesh:
runApplication reconstructPar

#Copy last timestamp folder to results:
mkdir results/"${deg_dir}_deg"
cp -r "$(ls -d [0-9]* | grep '[0-9]*' | sort -n | tail -n1)" results/"${deg_dir}_deg"

#Copy residuals as well:
mv -r postProcessing/residuals results/{deg_direction}_deg

##CLEAN results;
#cleanTimeDirectories()
#    {
#    echo "Cleaning $PWD case"
#    zeros=""
#   while [ ${#zeros} -lt 8 ]
#   do
#        timeDir="0.${zeros}[1-9]*"
#        rm -rf ./${timeDir} ./-${timeDir} > /dev/null 2>&1
#        zeros="0$zeros"
#    done

#Now cleaning time directories and log:
    rm -rf ./0 ./[1-9]* ./-[1-9]* ./log ./log.* ./log-* ./logSummary.* ./*.xml ./ParaView* ./paraFoam* ./*.OpenFOAM ./*.blockMesh ./.setSet > /dev/null 2>&1
    

#cleanDynamicCode()
    
    if [ -d system -a -d dynamicCode ]
    then
        rm -rf dynamicCode > /dev/null 2>&1
    fi
    

    rm -rf postProcessing > /dev/null 2>&1
    rm -rf probes* > /dev/null 2>&1
    rm -rf forces* > /dev/null 2>&1
    rm -rf graphs* > /dev/null 2>&1
    rm -rf sets > /dev/null 2>&1
    rm -rf surfaceSampling > /dev/null 2>&1
    rm -rf cuttingPlane > /dev/null 2>&1
    rm -rf system/machines > /dev/null 2>&1

	#CLEAN processor* non-mesh data;
	cd processor1
	ls | grep -v constant | xargs rm -r
	cd ../processor2
	ls | grep -v constant | xargs rm -r
	cd ../processor3
	ls | grep -v constant | xargs rm -r
	cd ../processor4
	ls | grep -v constant | xargs rm -r
	cd ..

#At the end calls counter
n_dir=$(($n_dir+1));
done

#------------------------------------------------------------------------------
